"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sync = void 0;
const getScopedPackages_1 = require("../monorepo/getScopedPackages");
const getPackageInfos_1 = require("../monorepo/getPackageInfos");
const listPackageVersions_1 = require("../packageManager/listPackageVersions");
const semver_1 = __importDefault(require("semver"));
const setDependentVersions_1 = require("../bump/setDependentVersions");
const performBump_1 = require("../bump/performBump");
async function sync(options) {
    const packageInfos = (0, getPackageInfos_1.getPackageInfos)(options.path);
    const scopedPackages = new Set((0, getScopedPackages_1.getScopedPackages)(options, packageInfos));
    const infos = new Map(Object.entries(packageInfos).filter(([pkg, info]) => !info.private && scopedPackages.has(pkg)));
    const publishedVersions = await (0, listPackageVersions_1.listPackageVersionsByTag)([...infos.values()], options.tag, options);
    const modifiedPackages = new Set();
    for (const [pkg, info] of infos.entries()) {
        if (publishedVersions[pkg]) {
            const publishedVersion = publishedVersions[pkg];
            if (publishedVersion && (options.forceVersions || semver_1.default.lt(info.version, publishedVersion))) {
                console.log(`There is a newer version of "${pkg}@${info.version}". Syncing to the published version ${publishedVersion}`);
                packageInfos[pkg].version = publishedVersion;
                modifiedPackages.add(pkg);
            }
        }
    }
    const dependentModifiedPackages = (0, setDependentVersions_1.setDependentVersions)(packageInfos, scopedPackages, options);
    Object.keys(dependentModifiedPackages).forEach(pkg => modifiedPackages.add(pkg));
    (0, performBump_1.writePackageJson)(modifiedPackages, packageInfos);
    await (0, performBump_1.updatePackageLock)(options.path);
}
exports.sync = sync;
//# sourceMappingURL=sync.js.map