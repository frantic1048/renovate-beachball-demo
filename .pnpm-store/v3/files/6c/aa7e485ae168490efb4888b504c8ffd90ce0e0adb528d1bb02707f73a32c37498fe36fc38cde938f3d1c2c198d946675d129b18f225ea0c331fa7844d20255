import { BumpInfo } from '../types/BumpInfo';
/**
 * This is the core of the bumpInfo dependency bumping logic - done once per change file
 *
 * The algorithm is an iterative graph traversal algorithm (breadth first)
 * - it searches up the parent `dependents` and modifies the "calculatedChangeTypes" entries inside `BumpInfo`
 * - one single root entry from `pkgName` as given by a change file
 * - for all dependents
 *   - apply the `dependentChangeType` as change type
 * - this function is the primary way for package groups to get the same dependent change type by queueing up
 *   all packages within a group to be visited by the loop
 *
 * What is mutates:
 * - bumpInfo.calculatedChangeTypes: updates packages change type modifed by this function
 * - all dependents change types as part of a group update
 *
 * What it does not do:
 * - bumpInfo.calculatedChangeTypes: will not mutate the entryPoint `pkgName` change type
 *
 * Inputs from bumpInfo are listed in the [^1] below in the function body
 */
export declare function updateRelatedChangeType(changeFile: string, bumpInfo: BumpInfo, bumpDeps: boolean): void;
//# sourceMappingURL=updateRelatedChangeType.d.ts.map