"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.change = void 0;
const promptForChange_1 = require("../changefile/promptForChange");
const writeChangeFiles_1 = require("../changefile/writeChangeFiles");
const getPackageInfos_1 = require("../monorepo/getPackageInfos");
const workspace_tools_1 = require("workspace-tools");
const getChangedPackages_1 = require("../changefile/getChangedPackages");
const getPackageGroups_1 = require("../monorepo/getPackageGroups");
async function change(options) {
    const { branch, path: cwd, package: specificPackage } = options;
    const packageInfos = (0, getPackageInfos_1.getPackageInfos)(cwd);
    const packageGroups = (0, getPackageGroups_1.getPackageGroups)(packageInfos, cwd, options.groups);
    const changedPackages = typeof specificPackage === 'string'
        ? [specificPackage]
        : Array.isArray(specificPackage)
            ? specificPackage
            : (0, getChangedPackages_1.getChangedPackages)(options, packageInfos);
    if (!changedPackages.length) {
        return;
    }
    const recentMessages = (0, workspace_tools_1.getRecentCommitMessages)(branch, cwd);
    const email = (0, workspace_tools_1.getUserEmail)(cwd);
    const changes = await (0, promptForChange_1.promptForChange)({
        changedPackages,
        packageInfos,
        packageGroups,
        recentMessages,
        email,
        options,
    });
    if (changes) {
        (0, writeChangeFiles_1.writeChangeFiles)({
            changes,
            cwd: options.path,
            commitChangeFiles: options.commit,
            groupChanges: options.groupChanges,
        });
    }
}
exports.change = change;
//# sourceMappingURL=change.js.map