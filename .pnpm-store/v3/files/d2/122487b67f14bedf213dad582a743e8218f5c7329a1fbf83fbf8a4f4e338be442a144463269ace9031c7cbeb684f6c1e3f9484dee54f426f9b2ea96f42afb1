"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gatherBumpInfo = void 0;
const changeTypes_1 = require("../changefile/changeTypes");
const readChangeFiles_1 = require("../changefile/readChangeFiles");
const bumpInPlace_1 = require("./bumpInPlace");
const getScopedPackages_1 = require("../monorepo/getScopedPackages");
function gatherBumpInfo(options, packageInfos) {
    // Collate the changes per package
    const changes = (0, readChangeFiles_1.readChangeFiles)(options, packageInfos);
    // Clear non-existent packages from changefiles infos
    const calculatedChangeTypes = (0, changeTypes_1.initializePackageChangeTypes)(changes);
    Object.keys(calculatedChangeTypes).forEach(packageName => {
        if (!packageInfos[packageName]) {
            delete calculatedChangeTypes[packageName];
        }
    });
    const bumpInfo = {
        calculatedChangeTypes,
        packageInfos,
        packageGroups: {},
        changeFileChangeInfos: changes,
        modifiedPackages: new Set(),
        newPackages: new Set(),
        scopedPackages: new Set((0, getScopedPackages_1.getScopedPackages)(options, packageInfos)),
        dependentChangedBy: {},
        groupOptions: {},
        dependents: {},
    };
    (0, bumpInPlace_1.bumpInPlace)(bumpInfo, options);
    return bumpInfo;
}
exports.gatherBumpInfo = gatherBumpInfo;
//# sourceMappingURL=gatherBumpInfo.js.map