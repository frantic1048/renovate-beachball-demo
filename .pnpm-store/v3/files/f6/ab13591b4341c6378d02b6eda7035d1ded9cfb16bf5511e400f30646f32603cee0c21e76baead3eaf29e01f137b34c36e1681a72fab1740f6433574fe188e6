import { GitProcessOutput } from 'workspace-tools';
declare type GitFetchParams = {
    cwd: string;
    /** Remote to fetch from. If not specified, fetches all remotes. */
    remote?: string;
    /** Branch to fetch. This will be ignored if `remote` is not also specified. */
    branch?: string;
    /** Set depth to this number of commits (mutually exclusive with `deepen` and `unshallow`) */
    depth?: number;
    /** Deepen a shallow clone by this number of commits (mutually exclusive with `depth` and `unshallow`) */
    deepen?: number;
    /** Convert this from a shallow clone to a full clone (mutually exclusive with `depth` and `deepen`) */
    unshallow?: true;
    verbose?: boolean;
};
/**
 * Wrapper for `git fetch`. If `verbose` is true, log the command before starting, and display output
 * on stdout (except in tests). In tests with `verbose`, the output will be logged all together to
 * `console.log` when the command finishes (for easier mocking/capturing).
 */
export declare function gitFetch(params: GitFetchParams): GitProcessOutput & {
    errorMessage?: string;
};
export {};
//# sourceMappingURL=fetch.d.ts.map