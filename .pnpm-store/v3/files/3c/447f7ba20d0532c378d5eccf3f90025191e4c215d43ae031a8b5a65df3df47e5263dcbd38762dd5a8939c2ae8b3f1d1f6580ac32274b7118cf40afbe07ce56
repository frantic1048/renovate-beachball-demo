import { ChangeSet, ChangeType } from '../types/ChangeInfo';
/**
 * List of all change types from least to most significant.
 */
export declare const SortedChangeTypes: ChangeType[];
/**
 * Change type with the smallest weight.
 */
export declare const MinChangeType: ChangeType;
/**
 * Get initial package change types based on the greatest change type set for each package in any
 * change file, accounting for any disallowed change types or nonexistent packages.
 */
export declare function initializePackageChangeTypes(changeSet: ChangeSet): {
    [pkgName: string]: ChangeType;
};
/**
 * Get the max allowed change type based on `a` and `b`, accounting for disallowed change types:
 * e.g. if `a` is "major" and `b` is "patch", and "major" is disallowed, the result will be "minor"
 * (the greatest allowed change type).
 */
export declare function getMaxChangeType(a: ChangeType, b: ChangeType, disallowedChangeTypes: ChangeType[] | null): ChangeType;
//# sourceMappingURL=changeTypes.d.ts.map