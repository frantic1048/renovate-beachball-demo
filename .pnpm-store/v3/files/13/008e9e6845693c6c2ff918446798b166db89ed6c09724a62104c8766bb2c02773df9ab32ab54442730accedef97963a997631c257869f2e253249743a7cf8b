import prompts from 'prompts';
import { ChangeFileInfo, ChangeType } from '../types/ChangeInfo';
import { BeachballOptions } from '../types/BeachballOptions';
import { PackageGroups, PackageInfos } from '../types/PackageInfo';
declare type ChangePromptResponse = {
    type?: ChangeType;
    comment?: string;
};
/**
 * Uses `prompts` package to prompt for change type and description.
 * (For easier testing, this function does not handle filesystem access.)
 */
export declare function promptForChange(params: {
    changedPackages: string[];
    packageInfos: PackageInfos;
    packageGroups: PackageGroups;
    recentMessages: string[];
    email: string | null;
    options: BeachballOptions;
}): Promise<ChangeFileInfo[] | undefined>;
/**
 * Build the list of questions to ask the user for this package.
 * @internal exported for testing
 */
export declare function _getQuestionsForPackage(params: {
    pkg: string;
    packageInfos: PackageInfos;
    packageGroups: PackageGroups;
    options: BeachballOptions;
    recentMessages: string[];
}): prompts.PromptObject[] | undefined;
/**
 * Do the actual prompting.
 * @internal exported for testing
 */
export declare function _promptForPackageChange(questions: prompts.PromptObject[], pkg: string): Promise<ChangePromptResponse | undefined>;
/**
 * Validate/update the response from the user and return the full change file info.
 * @internal exported for testing
 */
export declare function _getChangeFileInfoFromResponse(params: {
    response: ChangePromptResponse;
    pkg: string;
    email: string | null;
    options: BeachballOptions;
}): ChangeFileInfo | undefined;
export {};
//# sourceMappingURL=promptForChange.d.ts.map